{"map":"{\"version\":3,\"sources\":[\"/home/ruchi/Documents/altcampus/work/githubRepoDetails/node_modules/file-loader/dist/cjs.js??ref--6-oneOf-7!/home/ruchi/Documents/altcampus/work/githubRepoDetails/src/logo.svg\",\"/home/ruchi/Documents/altcampus/work/githubRepoDetails/src/App.js\",\"/home/ruchi/Documents/altcampus/work/githubRepoDetails/src/serviceWorker.js\",\"/home/ruchi/Documents/altcampus/work/githubRepoDetails/src/index.js\"],\"names\":[\"module\",\"exports\",\"__webpack_require__\",\"p\",\"App\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"handleChange\",\"e\",\"val\",\"target\",\"value\",\"setState\",\"handelrepo\",\"repo\",\"url\",\"concat\",\"full_name\",\"fetch\",\"then\",\"res\",\"json\",\"data\",\"repoDetails\",\"name\",\"description\",\"commits\",\"splice\",\"handleSubmit\",\"preventDefault\",\"state\",\"d\",\"_this2\",\"react_default\",\"a\",\"createElement\",\"className\",\"onSubmit\",\"type\",\"onChange\",\"placeholder\",\"id\",\"map\",\"i\",\"onClick\",\"author\",\"login\",\"commit\",\"message\",\"Component\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"module.exports = __webpack_public_path__ + \\\"static/media/logo.5d5d9eef.svg\\\";\",\"import React, { Component } from 'react';\\nimport logo from './logo.svg';\\nimport './App.css';\\n\\nclass App extends Component {\\n  constructor(){\\n    super();\\n    this.state = {\\n      value: '',\\n      data: [],\\n      repoDetails: null,\\n    }\\n  }\\n\\n  handleChange = (e) => {\\n    var val = e.target.value;\\n    this.setState({\\n      value: val\\n    })\\n  }\\n\\n handelrepo = repo => (e) => {\\n  const url = `https://api.github.com/repos/${repo.full_name}/commits`;\\n  fetch(url).then(res => res.json()).then(data => this.setState({\\n    repoDetails: {name:repo.name, description: repo.description, commits: data.splice(0, 5)}\\n  }))\\n }\\n\\n\\n handleSubmit = (e) => {\\n  e.preventDefault();\\n  fetch(`https://api.github.com/orgs/${this.state.value}/repos`).then(res => res.json()).then(d => this.setState({\\n    data: d,\\n    value: ''\\n  }))\\n }\\n  render() {\\n    return (\\n      <div className=\\\"App\\\">\\n        <header className=\\\"App-header\\\">\\n        \\n          <h1><i className=\\\"fab fa-github\\\"></i>GitHub Organization Repo Details</h1>\\n        </header>\\n        <div className=\\\"main-container\\\">\\n          <div>\\n            <form onSubmit={this.handleSubmit}>\\n            <input type=\\\"text\\\" onChange={this.handleChange} placeholder=\\\"Search Org\\\" value={this.state.value} id=\\\"input\\\"/>\\n            </form>  \\n          </div>       \\n          <div className=\\\"main_list\\\">\\n            <div>\\n            <h1>Repo List</h1>\\n              {\\n                this.state.data && this.state.data.map((val, i) => {\\n                  return <h4 onClick={this.handelrepo(val)}>{val.full_name}</h4>\\n                })\\n              }\\n            </div>\\n\\n            <div>\\n            <h1>Repo Details</h1>\\n              {this.state.repoDetails && (<h4>{this.state.repoDetails.name}</h4>)}\\n              {\\n               this.state.repoDetails && this.state.repoDetails.commits.map(val => {\\n                  return (\\n                  <div className=\\\"commits-list\\\">\\n                  <h3>Author Name: {val.author.login}</h3>\\n                  <p><b>Commit Msg</b>: {val.commit.message}</p>\\n                  </div>\\n                  )\\n                })\\n              }\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{14:function(e,t,a){},16:function(e,t,a){e.exports=a.p+\"static/media/logo.5d5d9eef.svg\"},17:function(e,t,a){},19:function(e,t,a){\"use strict\";a.r(t);var n=a(0),i=a.n(n),l=a(2),o=a.n(l),r=(a(14),a(3)),c=a(4),s=a(6),u=a(5),m=a(7),h=(a(16),a(17),function(e){function t(){var e;return Object(r.a)(this,t),(e=Object(s.a)(this,Object(u.a)(t).call(this))).handleChange=function(t){var a=t.target.value;e.setState({value:a})},e.handelrepo=function(t){return function(a){var n=\"https://api.github.com/repos/\".concat(t.full_name,\"/commits\");fetch(n).then(function(e){return e.json()}).then(function(a){return e.setState({repoDetails:{name:t.name,description:t.description,commits:a.splice(0,5)}})})}},e.handleSubmit=function(t){t.preventDefault(),fetch(\"https://api.github.com/orgs/\".concat(e.state.value,\"/repos\")).then(function(e){return e.json()}).then(function(t){return e.setState({data:t,value:\"\"})})},e.state={value:\"\",data:[],repoDetails:null},e}return Object(m.a)(t,e),Object(c.a)(t,[{key:\"render\",value:function(){var e=this;return i.a.createElement(\"div\",{className:\"App\"},i.a.createElement(\"header\",{className:\"App-header\"},i.a.createElement(\"h1\",null,i.a.createElement(\"i\",{className:\"fab fa-github\"}),\"GitHub Organization Repo Details\")),i.a.createElement(\"div\",{className:\"main-container\"},i.a.createElement(\"div\",null,i.a.createElement(\"form\",{onSubmit:this.handleSubmit},i.a.createElement(\"input\",{type:\"text\",onChange:this.handleChange,placeholder:\"Search Org\",value:this.state.value,id:\"input\"}))),i.a.createElement(\"div\",{className:\"main_list\"},i.a.createElement(\"div\",null,i.a.createElement(\"h1\",null,\"Repo List\"),this.state.data&&this.state.data.map(function(t,a){return i.a.createElement(\"h4\",{onClick:e.handelrepo(t)},t.full_name)})),i.a.createElement(\"div\",null,i.a.createElement(\"h1\",null,\"Repo Details\"),this.state.repoDetails&&i.a.createElement(\"h4\",null,this.state.repoDetails.name),this.state.repoDetails&&this.state.repoDetails.commits.map(function(e){return i.a.createElement(\"div\",{className:\"commits-list\"},i.a.createElement(\"h3\",null,\"Author Name: \",e.author.login),i.a.createElement(\"p\",null,i.a.createElement(\"b\",null,\"Commit Msg\"),\": \",e.commit.message))})))))}}]),t}(n.Component));Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));o.a.render(i.a.createElement(h,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})},8:function(e,t,a){e.exports=a(19)}},[[8,2,1]]]);","extractedComments":[]}